//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.5.0.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."

namespace United.Definition.SeatCSL30
{
    using System = global::System;



    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeatMapCharacteristics
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfCabins", Required = Newtonsoft.Json.Required.Always)]
        public int NumberOfCabins { get; set; }

        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Error> Errors { get; set; }

        [Newtonsoft.Json.JsonProperty("cabins", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CabinCharacteristics> Cabins { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Error
    {
        [Newtonsoft.Json.JsonProperty("transactionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Message { get; set; }

        [Newtonsoft.Json.JsonProperty("exceptionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExceptionType { get; set; }

        [Newtonsoft.Json.JsonProperty("stop", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTime Stop { get; set; }

        [Newtonsoft.Json.JsonProperty("duration", Required = Newtonsoft.Json.Required.Always)]
        public long Duration { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CabinCharacteristics
    {
        [Newtonsoft.Json.JsonProperty("cabinType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CabinType { get; set; }

        [Newtonsoft.Json.JsonProperty("rowCount", Required = Newtonsoft.Json.Required.Always)]
        public int RowCount { get; set; }

        [Newtonsoft.Json.JsonProperty("aisleCount", Required = Newtonsoft.Json.Required.Always)]
        public int AisleCount { get; set; }

        [Newtonsoft.Json.JsonProperty("seatCount", Required = Newtonsoft.Json.Required.Always)]
        public int SeatCount { get; set; }

        [Newtonsoft.Json.JsonProperty("seats", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SeatCharacteristics> Seats { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeatCharacteristics
    {
        [Newtonsoft.Json.JsonProperty("characteristics", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Characteristic> Characteristics { get; set; }

        [Newtonsoft.Json.JsonProperty("verticalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int VerticalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("verticalSpan", Required = Newtonsoft.Json.Required.Always)]
        public int VerticalSpan { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalSpan", Required = Newtonsoft.Json.Required.Always)]
        public int HorizontalSpan { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int HorizontalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("itemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("seatCharacteristicCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatCharacteristicCode { get; set; }

        [Newtonsoft.Json.JsonProperty("seatType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatType { get; set; }

        [Newtonsoft.Json.JsonProperty("seatNumber", Required = Newtonsoft.Json.Required.Always)]
        public int SeatNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("seatLetter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatLetter { get; set; }

        [Newtonsoft.Json.JsonProperty("sharesSeatIndicator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SharesSeatIndicator { get; set; }

        [Newtonsoft.Json.JsonProperty("cabinType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CabinType { get; set; }

        [Newtonsoft.Json.JsonProperty("programPricingCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProgramPricingCode { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("displaySeatType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplaySeatType { get; set; }

        [Newtonsoft.Json.JsonProperty("seatPosition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatPosition { get; set; }

        [Newtonsoft.Json.JsonProperty("eDoc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EDoc { get; set; }

        [Newtonsoft.Json.JsonProperty("itemTypeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemTypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("seatAttribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatAttribute { get; set; }

        [Newtonsoft.Json.JsonProperty("itemDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemDescription { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Characteristic
    {
        [Newtonsoft.Json.JsonProperty("key", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Key { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IcrData
    {
        [Newtonsoft.Json.JsonProperty("icrCount", Required = Newtonsoft.Json.Required.Always)]
        public int IcrCount { get; set; }

        [Newtonsoft.Json.JsonProperty("icrNames", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IcrNames { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeatMap
    {
        [Newtonsoft.Json.JsonProperty("transactionIdentifiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Identifiers TransactionIdentifiers { get; set; }

        [Newtonsoft.Json.JsonProperty("flightInfo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FlightInfo FlightInfo { get; set; }

        [Newtonsoft.Json.JsonProperty("aircraftInfo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AircraftInfo AircraftInfo { get; set; }

        [Newtonsoft.Json.JsonProperty("cabins", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Cabin> Cabins { get; set; }

        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Error> Errors { get; set; }

        [Newtonsoft.Json.JsonProperty("tiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Tier> Tiers { get; set; }

        [Newtonsoft.Json.JsonProperty("travelers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Traveler> Travelers { get; set; }

        [Newtonsoft.Json.JsonProperty("seatOfferTiles", Required = Newtonsoft.Json.Required.Always)]
        public decimal SeatOfferTiles { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Identifiers
    {
        [Newtonsoft.Json.JsonProperty("transactionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("isDefaultPricingRequired", Required = Newtonsoft.Json.Required.Always)]
        public bool IsDefaultPricingRequired { get; set; }

        [Newtonsoft.Json.JsonProperty("clientTransactionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ClientTransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("dataPowerTokenId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DataPowerTokenId { get; set; }

        [Newtonsoft.Json.JsonProperty("merchCorrelationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MerchCorrelationId { get; set; }

        [Newtonsoft.Json.JsonProperty("merchSessionKey", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MerchSessionKey { get; set; }

        [Newtonsoft.Json.JsonProperty("rtdAdvisoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RtdAdvisoryId { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FlightInfo
    {
        [Newtonsoft.Json.JsonProperty("marketingFlightNumber", Required = Newtonsoft.Json.Required.Always)]
        public int MarketingFlightNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("operatingFlightNumber", Required = Newtonsoft.Json.Required.Always)]
        public int OperatingFlightNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingCarrierCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MarketingCarrierCode { get; set; }

        [Newtonsoft.Json.JsonProperty("operatingCarrierCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OperatingCarrierCode { get; set; }

        [Newtonsoft.Json.JsonProperty("departureDate", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTime DepartureDate { get; set; }

        [Newtonsoft.Json.JsonProperty("departureAirport", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DepartureAirport { get; set; }

        [Newtonsoft.Json.JsonProperty("arrivalAirport", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArrivalAirport { get; set; }

        [Newtonsoft.Json.JsonProperty("noSeatSelectionWindow", Required = Newtonsoft.Json.Required.Always)]
        public bool NoSeatSelectionWindow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AircraftInfo
    {
        [Newtonsoft.Json.JsonProperty("tailNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TailNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("icr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Icr { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Cabin
    {
        [Newtonsoft.Json.JsonProperty("isUpperDeck", Required = Newtonsoft.Json.Required.Always)]
        public bool IsUpperDeck { get; set; }

        [Newtonsoft.Json.JsonProperty("cabinType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CabinType { get; set; }

        [Newtonsoft.Json.JsonProperty("cabinBrand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CabinBrand { get; set; }

        [Newtonsoft.Json.JsonProperty("cabinBranded", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CabinBranded { get; set; }

        [Newtonsoft.Json.JsonProperty("layout", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Layout { get; set; }

        [Newtonsoft.Json.JsonProperty("rowCount", Required = Newtonsoft.Json.Required.Always)]
        public int RowCount { get; set; }

        [Newtonsoft.Json.JsonProperty("columnCount", Required = Newtonsoft.Json.Required.Always)]
        public int ColumnCount { get; set; }

        [Newtonsoft.Json.JsonProperty("availableSeats", Required = Newtonsoft.Json.Required.Always)]
        public int AvailableSeats { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSeats", Required = Newtonsoft.Json.Required.Always)]
        public int TotalSeats { get; set; }

        [Newtonsoft.Json.JsonProperty("rows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Row> Rows { get; set; }

        [Newtonsoft.Json.JsonProperty("monumentRows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<MonumentRow> MonumentRows { get; set; }

        [Newtonsoft.Json.JsonProperty("noComplementarySeatsAvailble", Required = Newtonsoft.Json.Required.Always)]
        public bool NoComplementarySeatsAvailble { get; set; }

        [Newtonsoft.Json.JsonProperty("noSeatsAvailable", Required = Newtonsoft.Json.Required.Always)]
        public bool NoSeatsAvailable { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Row
    {
        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.Always)]
        public int Number { get; set; }

        [Newtonsoft.Json.JsonProperty("verticalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int VerticalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("wing", Required = Newtonsoft.Json.Required.Always)]
        public bool Wing { get; set; }

        [Newtonsoft.Json.JsonProperty("seats", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Seat> Seats { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Seat
    {
        [Newtonsoft.Json.JsonProperty("adjacentGroupId", Required = Newtonsoft.Json.Required.Always)]
        public int AdjacentGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Number { get; set; }

        [Newtonsoft.Json.JsonProperty("tier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Tier { get; set; }

        [Newtonsoft.Json.JsonProperty("rowNumber", Required = Newtonsoft.Json.Required.Always)]
        public int RowNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("letter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Letter { get; set; }

        [Newtonsoft.Json.JsonProperty("location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Location { get; set; }

        [Newtonsoft.Json.JsonProperty("seatSection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatSection { get; set; }

        [Newtonsoft.Json.JsonProperty("itemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("pitchLength", Required = Newtonsoft.Json.Required.Always)]
        public int PitchLength { get; set; }

        [Newtonsoft.Json.JsonProperty("seatWidthInches", Required = Newtonsoft.Json.Required.Always)]
        public decimal SeatWidthInches { get; set; }

        [Newtonsoft.Json.JsonProperty("isBassinet", Required = Newtonsoft.Json.Required.Always)]
        public bool IsBassinet { get; set; }

        [Newtonsoft.Json.JsonProperty("isExtraPitch", Required = Newtonsoft.Json.Required.Always)]
        public bool IsExtraPitch { get; set; }

        [Newtonsoft.Json.JsonProperty("isExtraSeatWidth", Required = Newtonsoft.Json.Required.Always)]
        public bool IsExtraSeatWidth { get; set; }

        [Newtonsoft.Json.JsonProperty("hasInSeatPower", Required = Newtonsoft.Json.Required.Always)]
        public bool HasInSeatPower { get; set; }

        [Newtonsoft.Json.JsonProperty("under15YrsOld", Required = Newtonsoft.Json.Required.Always)]
        public bool Under15YrsOld { get; set; }

        [Newtonsoft.Json.JsonProperty("recline", Required = Newtonsoft.Json.Required.Always)]
        public double Recline { get; set; }

        [Newtonsoft.Json.JsonProperty("reclineType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ReclineType { get; set; }

        [Newtonsoft.Json.JsonProperty("isLimitedSeatWidth", Required = Newtonsoft.Json.Required.Always)]
        public bool IsLimitedSeatWidth { get; set; }

        [Newtonsoft.Json.JsonProperty("isSeatRearFacing", Required = Newtonsoft.Json.Required.Always)]
        public bool IsSeatRearFacing { get; set; }

        [Newtonsoft.Json.JsonProperty("isWindowObstructedView", Required = Newtonsoft.Json.Required.Always)]
        public bool IsWindowObstructedView { get; set; }

        [Newtonsoft.Json.JsonProperty("isReserveSeat", Required = Newtonsoft.Json.Required.Always)]
        public bool IsReserveSeat { get; set; }

        [Newtonsoft.Json.JsonProperty("isUmnrSeat", Required = Newtonsoft.Json.Required.Always)]
        public bool IsUmnrSeat { get; set; }

        [Newtonsoft.Json.JsonProperty("hasNoUnderSeatStorage", Required = Newtonsoft.Json.Required.Always)]
        public bool HasNoUnderSeatStorage { get; set; }

        [Newtonsoft.Json.JsonProperty("seatType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatType { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int HorizontalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailable", Required = Newtonsoft.Json.Required.Always)]
        public bool IsAvailable { get; set; }

        [Newtonsoft.Json.JsonProperty("isBlocked", Required = Newtonsoft.Json.Required.Always)]
        public bool IsBlocked { get; set; }

        [Newtonsoft.Json.JsonProperty("isAdvanced", Required = Newtonsoft.Json.Required.Always)]
        public bool IsAdvanced { get; set; }

        [Newtonsoft.Json.JsonProperty("servicesAndFees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SeatService> ServicesAndFees { get; set; }

        [Newtonsoft.Json.JsonProperty("isPermanentBlocked", Required = Newtonsoft.Json.Required.Always)]
        public bool IsPermanentBlocked { get; set; }

        [Newtonsoft.Json.JsonProperty("isBulkhead", Required = Newtonsoft.Json.Required.Always)]
        public bool IsBulkhead { get; set; }

        [Newtonsoft.Json.JsonProperty("isBBlocked", Required = Newtonsoft.Json.Required.Always)]
        public bool IsBBlocked { get; set; }

        [Newtonsoft.Json.JsonProperty("isExit", Required = Newtonsoft.Json.Required.Always)]
        public bool IsExit { get; set; }

        [Newtonsoft.Json.JsonProperty("isInoperative", Required = Newtonsoft.Json.Required.Always)]
        public bool IsInoperative { get; set; }

        [Newtonsoft.Json.JsonProperty("isOccupied", Required = Newtonsoft.Json.Required.Always)]
        public bool IsOccupied { get; set; }

        [Newtonsoft.Json.JsonProperty("isHeld", Required = Newtonsoft.Json.Required.Always)]
        public bool IsHeld { get; set; }

        [Newtonsoft.Json.JsonProperty("isOnWing", Required = Newtonsoft.Json.Required.Always)]
        public bool IsOnWing { get; set; }

        [Newtonsoft.Json.JsonProperty("sellableSeatCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SellableSeatCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("programPricingCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProgramPricingCode { get; set; }

        [Newtonsoft.Json.JsonProperty("eDoc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EDoc { get; set; }

        [Newtonsoft.Json.JsonProperty("displaySeatType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplaySeatType { get; set; }

        [Newtonsoft.Json.JsonProperty("displaySeatCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplaySeatCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("allowPet", Required = Newtonsoft.Json.Required.Always)]
        public bool AllowPet { get; set; }

        [Newtonsoft.Json.JsonProperty("allowPrisonerGuard", Required = Newtonsoft.Json.Required.Always)]
        public bool AllowPrisonerGuard { get; set; }

        [Newtonsoft.Json.JsonProperty("isSocialDistancing", Required = Newtonsoft.Json.Required.Always)]
        public bool IsSocialDistancing { get; set; }

        [Newtonsoft.Json.JsonProperty("isCrewDistancing", Required = Newtonsoft.Json.Required.Always)]
        public bool IsCrewDistancing { get; set; }

        [Newtonsoft.Json.JsonProperty("allowDisabledPassenger", Required = Newtonsoft.Json.Required.Always)]
        public bool AllowDisabledPassenger { get; set; }

        [Newtonsoft.Json.JsonProperty("allowLapInfant", Required = Newtonsoft.Json.Required.Always)]
        public bool AllowLapInfant { get; set; }

        [Newtonsoft.Json.JsonProperty("allowUnAccompaniedMinor", Required = Newtonsoft.Json.Required.Always)]
        public bool AllowUnAccompaniedMinor { get; set; }

        [Newtonsoft.Json.JsonProperty("isUmnrSeatShares", Required = Newtonsoft.Json.Required.Always)]
        public bool IsUmnrSeatShares { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeatService
    {
        [Newtonsoft.Json.JsonProperty("baseFee", Required = Newtonsoft.Json.Required.Always)]
        public decimal BaseFee { get; set; }

        [Newtonsoft.Json.JsonProperty("tax", Required = Newtonsoft.Json.Required.Always)]
        public decimal Tax { get; set; }

        [Newtonsoft.Json.JsonProperty("totalFee", Required = Newtonsoft.Json.Required.Always)]
        public decimal TotalFee { get; set; }

        [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Currency { get; set; }

        [Newtonsoft.Json.JsonProperty("eliteStatus", Required = Newtonsoft.Json.Required.Always)]
        public int EliteStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("available", Required = Newtonsoft.Json.Required.Always)]
        public bool Available { get; set; }

        [Newtonsoft.Json.JsonProperty("isDefault", Required = Newtonsoft.Json.Required.Always)]
        public bool IsDefault { get; set; }

        [Newtonsoft.Json.JsonProperty("agentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AgentId { get; set; }

        [Newtonsoft.Json.JsonProperty("agentTripleA", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AgentTripleA { get; set; }

        [Newtonsoft.Json.JsonProperty("agentDutyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AgentDutyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("feeWaiveType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FeeWaiveType { get; set; }

        [Newtonsoft.Json.JsonProperty("overrideReason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OverrideReason { get; set; }

        [Newtonsoft.Json.JsonProperty("seatLocation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SeatLocation { get; set; }

        [Newtonsoft.Json.JsonProperty("seatCategoryId", Required = Newtonsoft.Json.Required.Always)]
        public int SeatCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("discountDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DiscountDetails DiscountDetails { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfCurrencyDecimals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NumberOfCurrencyDecimals { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountDetails
    {
        [Newtonsoft.Json.JsonProperty("percentage", Required = Newtonsoft.Json.Required.Always)]
        public double Percentage { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        public double Value { get; set; }

        [Newtonsoft.Json.JsonProperty("appliedTo", Required = Newtonsoft.Json.Required.Always)]
        public double AppliedTo { get; set; }

        [Newtonsoft.Json.JsonProperty("designator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Designator { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MonumentRow
    {
        [Newtonsoft.Json.JsonProperty("verticalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int VerticalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("monuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Monument> Monuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Monument
    {
        [Newtonsoft.Json.JsonProperty("location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Location { get; set; }

        [Newtonsoft.Json.JsonProperty("itemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalGridNumber", Required = Newtonsoft.Json.Required.Always)]
        public int HorizontalGridNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("horizontalSpan", Required = Newtonsoft.Json.Required.Always)]
        public int HorizontalSpan { get; set; }

        [Newtonsoft.Json.JsonProperty("verticalSpan", Required = Newtonsoft.Json.Required.Always)]
        public int VerticalSpan { get; set; }

        [Newtonsoft.Json.JsonProperty("isExit", Required = Newtonsoft.Json.Required.Always)]
        public bool IsExit { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Tier
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public int Id { get; set; }

        [Newtonsoft.Json.JsonProperty("basePrice", Required = Newtonsoft.Json.Required.Always)]
        public decimal BasePrice { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CurrencyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfDecimals", Required = Newtonsoft.Json.Required.Always)]
        public decimal NumberOfDecimals { get; set; }

        [Newtonsoft.Json.JsonProperty("pricing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Pricing> Pricing { get; set; }

        [Newtonsoft.Json.JsonProperty("Seats", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<TierSeat> Seats { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Pricing
    {
        [Newtonsoft.Json.JsonProperty("travelerId", Required = Newtonsoft.Json.Required.Always)]
        public int TravelerId { get; set; }

        [Newtonsoft.Json.JsonProperty("totalPrice", Required = Newtonsoft.Json.Required.Always)]
        public decimal TotalPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("eligibility", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Eligibility { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TierSeat
    {
        [Newtonsoft.Json.JsonProperty("number", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Number { get; set; }

        [Newtonsoft.Json.JsonProperty("rowNumber", Required = Newtonsoft.Json.Required.Always)]
        public int RowNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("letter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Letter { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Traveler
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public int Id { get; set; }

        [Newtonsoft.Json.JsonProperty("travelerIndex", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TravelerIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Age { get; set; }

        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [Newtonsoft.Json.JsonProperty("passengerTypeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PassengerTypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("gender", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Gender { get; set; }

        [Newtonsoft.Json.JsonProperty("ticketingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TicketingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("seatRecommended", Required = Newtonsoft.Json.Required.Always)]
        public bool SeatRecommended { get; set; }

        [Newtonsoft.Json.JsonProperty("recommendedSeatNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RecommendedSeatNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("recommendedSeatImage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RecommendedSeatImage { get; set; }

        [Newtonsoft.Json.JsonProperty("recommendedSeatText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RecommendedSeatText { get; set; }

        [Newtonsoft.Json.JsonProperty("ticketingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TicketingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("loyalty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LoyaltyProfile> Loyalty { get; set; }

        [Newtonsoft.Json.JsonProperty("entitlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Entitlement> Entitlements { get; set; }

        [Newtonsoft.Json.JsonProperty("specialServiceRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SpecialServiceRequests> SpecialServiceRequests { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LoyaltyProfile
    {
        [Newtonsoft.Json.JsonProperty("programId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProgramId { get; set; }

        [Newtonsoft.Json.JsonProperty("memberShipId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MemberShipId { get; set; }

        [Newtonsoft.Json.JsonProperty("loyaltyLevel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LoyaltyLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SubscriptionOffer> SubscriptionOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SubscriptionOffer
    {
        [Newtonsoft.Json.JsonProperty("isAvailable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IsAvailable { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Subscription> Subscriptions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Subscription
    {
        [Newtonsoft.Json.JsonProperty("subscriptionName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubscriptionName { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PurchaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("expirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExpirationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubscriptionType { get; set; }

        [Newtonsoft.Json.JsonProperty("subscriptionCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubscriptionCode { get; set; }

        [Newtonsoft.Json.JsonProperty("holderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string HolderType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Entitlement
    {
        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("groupCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string GroupCode { get; set; }

        [Newtonsoft.Json.JsonProperty("reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Reason { get; set; }

        [Newtonsoft.Json.JsonProperty("subGroupCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SubGroupCode { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SpecialServiceRequests
    {
        [Newtonsoft.Json.JsonProperty("specialServiceRequestCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SpecialServiceRequestCode { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SeatMapRequest
    {
        [Newtonsoft.Json.JsonProperty("recordLocator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RecordLocator { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CurrencyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("languageCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LanguageCode { get; set; }

        [Newtonsoft.Json.JsonProperty("isLapChild", Required = Newtonsoft.Json.Required.Always)]
        public bool IsLapChild { get; set; }

        [Newtonsoft.Json.JsonProperty("isFrontCabin", Required = Newtonsoft.Json.Required.Always)]
        public bool IsFrontCabin { get; set; }

        [Newtonsoft.Json.JsonProperty("isUppCabin", Required = Newtonsoft.Json.Required.Always)]
        public bool IsUppCabin { get; set; }

        [Newtonsoft.Json.JsonProperty("isAwardReservation", Required = Newtonsoft.Json.Required.Always)]
        public bool IsAwardReservation { get; set; }

        [Newtonsoft.Json.JsonProperty("flightSegments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<FlightSegments> FlightSegments { get; set; }

        [Newtonsoft.Json.JsonProperty("reservationReferences", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ReservationReferences> ReservationReferences { get; set; }

        [Newtonsoft.Json.JsonProperty("travelers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Traveler2> Travelers { get; set; }

        [Newtonsoft.Json.JsonProperty("bookingCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BookingCode { get; set; }

        [Newtonsoft.Json.JsonProperty("productCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProductCode { get; set; }

        [Newtonsoft.Json.JsonProperty("callRtd", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CallRtd { get; set; }

        [Newtonsoft.Json.JsonProperty("dutyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DutyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("bundleCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BundleCode { get; set; }

        [Newtonsoft.Json.JsonProperty("channelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ChannelId { get; set; }

        [Newtonsoft.Json.JsonProperty("channelName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ChannelName { get; set; }

        [Newtonsoft.Json.JsonProperty("cartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CartId { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FlightSegments
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public int Id { get; set; }

        [Newtonsoft.Json.JsonProperty("classOfService", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ClassOfService { get; set; }

        [Newtonsoft.Json.JsonProperty("farebasisCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FarebasisCode { get; set; }

        [Newtonsoft.Json.JsonProperty("pricing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pricing { get; set; }

        [Newtonsoft.Json.JsonProperty("checkInSegment", Required = Newtonsoft.Json.Required.Always)]
        public bool CheckInSegment { get; set; }

        [Newtonsoft.Json.JsonProperty("tripIndicator", Required = Newtonsoft.Json.Required.Always)]
        public int TripIndicator { get; set; }

        [Newtonsoft.Json.JsonProperty("departureAirport", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Airport DepartureAirport { get; set; }

        [Newtonsoft.Json.JsonProperty("arrivalAirport", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Airport ArrivalAirport { get; set; }

        [Newtonsoft.Json.JsonProperty("departureDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DepartureDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("arrivalDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ArrivalDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("flightNumber", Required = Newtonsoft.Json.Required.Always)]
        public int FlightNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("operatingFlightNumber", Required = Newtonsoft.Json.Required.Always)]
        public int OperatingFlightNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("operatingAirlineCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OperatingAirlineCode { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingAirlineCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MarketingAirlineCode { get; set; }

        [Newtonsoft.Json.JsonProperty("segmentNumber", Required = Newtonsoft.Json.Required.Always)]
        public int SegmentNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("isInternational", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IsInternational { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Airport
    {
        [Newtonsoft.Json.JsonProperty("iataCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IataCode { get; set; }

        [Newtonsoft.Json.JsonProperty("iataCountryCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IataCountryCode IataCountryCode { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IataCountryCode
    {
        [Newtonsoft.Json.JsonProperty("countryCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CountryCode { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReservationReferences
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("reservationType", Required = Newtonsoft.Json.Required.Always)]
        public int ReservationType { get; set; }

        [Newtonsoft.Json.JsonProperty("paxFares", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Price> PaxFares { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Price
    {
        [Newtonsoft.Json.JsonProperty("basePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Totals> BasePrice { get; set; }

        [Newtonsoft.Json.JsonProperty("totals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Totals> Totals { get; set; }

        [Newtonsoft.Json.JsonProperty("fareCalculation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FareCalculation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Totals
    {
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Currency Currency { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Amount { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.15.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Currency
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("decimalPlace", Required = Newtonsoft.Json.Required.Always)]
        public int DecimalPlace { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Traveler2
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        public int Id { get; set; }

        [Newtonsoft.Json.JsonProperty("travelerIndex", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TravelerIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [Newtonsoft.Json.JsonProperty("age", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Age { get; set; }

        [Newtonsoft.Json.JsonProperty("dateOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateOfBirth { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [Newtonsoft.Json.JsonProperty("passengerTypeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PassengerTypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("ticketingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TicketingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("loyaltyProfiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LoyaltyProfile> LoyaltyProfiles { get; set; }

        [Newtonsoft.Json.JsonProperty("specialServiceRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SpecialServiceRequests> SpecialServiceRequests { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.23.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OfferTiles
    {
        [Newtonsoft.Json.JsonProperty("transactionIdentifiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Identifiers TransactionIdentifiers { get; set; }

        [Newtonsoft.Json.JsonProperty("errors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Error> Errors { get; set; }

        [Newtonsoft.Json.JsonProperty("seatOfferTiles", Required = Newtonsoft.Json.Required.Always)]
        public decimal SeatOfferTiles { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CurrencyCode { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.5.0.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable _client;
        private System.IDisposable _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable client, System.IDisposable response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            if (Stream != null)
                Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.5.0.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + response.Substring(0, response.Length >= 512 ? 512 : response.Length), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.5.0.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore 472
#pragma warning restore 114
#pragma warning restore 108